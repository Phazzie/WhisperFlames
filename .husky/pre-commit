#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "🚧 SDD Pre-commit Validation..."

# Check if any staged files are in src/generated/
staged_generated_files=$(git diff --cached --name-only | grep "^src/generated/" || true)

if [ -n "$staged_generated_files" ]; then
  echo "🚨 Files in src/generated/ are staged for commit:"
  echo "$staged_generated_files"
  echo ""
  
  # Check if commit message contains Manual-Patch trailer
  commit_msg_file=$(git rev-parse --git-dir)/COMMIT_EDITMSG
  
  if [ -f "$commit_msg_file" ]; then
    if ! grep -q "Manual-Patch:\s\+\S\+" "$commit_msg_file"; then
      echo "❌ SDD VIOLATION: Manual edits to src/generated/ require 'Manual-Patch: <SeamName>' trailer"
      echo ""
      echo "Add this to your commit message:"
      echo "Manual-Patch: YourSeamName"
      echo ""
      exit 1
    fi
  else
    echo "❌ SDD VIOLATION: Manual edits to src/generated/ require 'Manual-Patch: <SeamName>' trailer"
    echo ""
    exit 1
  fi
  
  echo "✅ Manual-Patch trailer found - commit allowed"
fi

# Validate contracts before commit
echo "🔍 Validating contracts..."
npm run check:examples
if [ $? -ne 0 ]; then
  echo "❌ SDD VIOLATION: Contract validation failed"
  exit 1
fi

# Check for direct contract edits (should be new versions instead)
staged_contracts=$(git diff --cached --name-only | grep "^contracts/.*\.yml$" || true)
if [ -n "$staged_contracts" ]; then
  for contract in $staged_contracts; do
    if git show HEAD:"$contract" >/dev/null 2>&1; then
      echo "❌ SDD VIOLATION: Contract '$contract' is being edited"
      echo "Contracts are immutable. Create a new version instead (v2, v3, etc.)"
      exit 1
    fi
  done
fi

echo "✅ All SDD validations passed!"
